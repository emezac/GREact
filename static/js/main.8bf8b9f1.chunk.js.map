{"version":3,"sources":["context.js","components/layout/Navbar.js","components/layout/Progress.js","components/main/Card.js","components/layout/Buttons.js","components/pages/Home.js","components/pages/About.js","components/pages/Topics.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","topicIDS","i","greData","length","push","ID","TOPIC","reducer","state","action","type","Object","objectSpread","currentTopicNo","Number","payload","slice","currentWord","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","words","dispatch","setState","inherits","createClass","key","value","react_default","a","createElement","props","children","Component","Consumer","getSuggestions","escapedValue","trim","replace","regex","RegExp","filter","word","test","WORD","getSuggestionValue","suggestion","renderSuggestion","shouldRenderSuggestions","Navbar","onChange","event","_ref","newValue","method","onSuggestionsFetchRequested","_ref2","suggestions","onSuggestionsClearRequested","onKeyPress","e","preventDefault","target","_this2","value2","_this2$state","inputProps","placeholder","bind","Fragment","className","react_router_dom","to","onClickChange","dist_default","Progress","style","width","Card","fetchTopic","currentTarget","name","onClick","MEANING","SENTENCE","Buttons","totalWordsLength","Math","floor","random","onRandomClick","Home","layout_Progress","main_Card","layout_Buttons","About","Topics","id","display","map","idx","textDecoration","NotFound","App","context_Provider","components_layout_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8bf8b9f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport greData from \"./gredata.json\";\n\nconst Context = React.createContext();\n\nexport let topicIDS = [];\nfor (let i = 0; i < greData.length; i++) {\n  if (i === 0) {\n    topicIDS.push(greData[i].ID);\n  } else if (greData[i].TOPIC !== greData[i - 1].TOPIC) {\n    topicIDS.push(greData[i].ID);\n  }\n}\n// console.log(topicIDS);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SHOW_WORD\":\n      return {\n        ...state,\n        // Magic line\n        currentTopicNo: Number(greData[action.payload].TOPIC.slice(0, 3)) - 1,\n        currentWord: greData[action.payload]\n      };\n    case \"SHOW_RANDOM_WORD\":\n      return {\n        ...state,\n        currentTopicNo: Number(greData[action.payload].TOPIC.slice(0, 3)) - 1,\n        currentWord: greData[action.payload]\n      };\n    case \"SHOW_TOPIC\":\n      return {\n        ...state,\n        currentTopicNo: action.payload,\n        currentWord: greData[topicIDS[action.payload]]\n      };\n    case \"LOAD_TOPIC\":\n      return {\n        ...state,\n        currentTopicNo: Number(greData[action.payload].TOPIC.slice(0, 3)) - 1,\n        currentWord: greData[action.payload]\n      };\n    case \"SHOW_SEARCH_RESULT\":\n      return {\n        ...state,\n        currentTopicNo: Number(greData[action.payload].TOPIC.slice(0, 3)) - 1,\n        currentWord: greData[action.payload]\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    words: greData,\n    currentWord: greData[0],\n    currentTopicNo: 0,\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  render() {\n    // console.log(this.state);\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Consumer } from \"../../context\";\nimport greData from \"../../gredata.json\";\nimport Autosuggest from \"react-autosuggest\";\n\nimport \"../layout/Navbar.css\";\n\nlet words = greData;\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\n\nfunction getSuggestions(value) {\n  const escapedValue = escapeRegexCharacters(value.trim());\n\n  if (escapedValue === \"\") {\n    return [];\n  }\n\n  const regex = new RegExp(\"^\" + escapedValue, \"i\");\n\n  return words.filter(word => regex.test(word.WORD));\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.WORD;\n}\n\nfunction renderSuggestion(suggestion) {\n  return <span>{suggestion.WORD}</span>;\n}\n\nfunction shouldRenderSuggestions(value) {\n  return value.trim().length > 1;\n}\n\nclass Navbar extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: \"\",\n      suggestions: []\n    };\n  }\n\n  onChange = (event, { newValue, method }) => {\n    this.setState({\n      value: newValue\n    });\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  onKeyPress = (dispatch, e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      // console.log(e.target.value);\n      for (let i = 0; i < words.length; i++) {\n        if (words[i].WORD === e.target.value) {\n          // console.log(\"YES\");\n          dispatch({ type: \"SHOW_SEARCH_RESULT\", payload: i });\n          break;\n        }\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Consumer>\n        {value2 => {\n          const { dispatch } = value2;\n          const { value, suggestions } = this.state;\n          const inputProps = {\n            placeholder: \"Search Word\",\n            value,\n            onChange: this.onChange,\n            onKeyPress: this.onKeyPress.bind(this, dispatch)\n          };\n          return (\n            <React.Fragment>\n              <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-5\">\n                <div className=\"container\">\n                  <Link className=\"navbar-brand text-success\" to=\"/\">\n                    GREact\n                  </Link>\n                  <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                      <Link className=\"nav-link text-light\" to=\"/\">\n                        <i className=\"fas fa-home mr-1\" />\n                        Home\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link className=\"nav-link text-light\" to=\"/about\">\n                        <i className=\"fas fa-question mr-1\" />\n                        About\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link className=\"nav-link text-light\" to=\"/topics\">\n                        <i className=\"fas fa-tree mr-1\" />\n                        Topics\n                      </Link>\n                    </li>\n                  </ul>\n\n                  <form className=\"form-inline ml-auto\">\n                    <div className=\"mr-3\" onChange={this.onClickChange}>\n                      <Autosuggest\n                        suggestions={suggestions}\n                        onSuggestionsFetchRequested={\n                          this.onSuggestionsFetchRequested\n                        }\n                        onSuggestionsClearRequested={\n                          this.onSuggestionsClearRequested\n                        }\n                        getSuggestionValue={getSuggestionValue}\n                        renderSuggestion={renderSuggestion}\n                        shouldRenderSuggestions={shouldRenderSuggestions}\n                        inputProps={inputProps}\n                      />\n                    </div>\n                  </form>\n                </div>\n              </nav>\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\n\nclass Progress extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { words, currentWord } = value;\n          return (\n            <div className=\"text-center container mx-auto mb-5\">\n              <div>\n                <h5 className=\"text-info\">\n                  {currentWord.ID + 1} of {words.length}\n                </h5>\n              </div>\n              <div className=\"progress\">\n                <div\n                  className=\"progress-bar bg-info\"\n                  style={{ width: `${currentWord.ID / 18}%` }}\n                />\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Progress;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport { topicIDS } from \"../../context\";\n\nclass Card extends Component {\n  fetchTopic = (currentTopicNo, dispatch, e) => {\n//     console.log(\"Should be working\");\n//     console.log(e.currentTarget.name);\n    if (e.currentTarget.name === \"Previous Topic\") {\n      if (currentTopicNo === 0) {\n        dispatch({ type: \"SHOW_TOPIC\", payload: topicIDS.length - 1 });\n      } else {\n        dispatch({ type: \"SHOW_TOPIC\", payload: currentTopicNo - 1 });\n      }\n    } else if (e.currentTarget.name === \"Next Topic\") {\n      if (currentTopicNo === topicIDS.length - 1) {\n        dispatch({ type: \"SHOW_TOPIC\", payload: 0 });\n      } else {\n        dispatch({ type: \"SHOW_TOPIC\", payload: currentTopicNo + 1 });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { currentWord } = this.props;\n          const { words, currentTopicNo, dispatch } = value;\n          return (\n            <div className=\"container w-75\">\n              <div className=\"card mb-4\">\n                <div className=\"card-header bg-success pt-4 mb-3\">\n                  <div className=\"h1\">\n                    <button\n                      name=\"Previous Topic\"\n                      className=\"btn float-left btn-success text-dark btn-lg\"\n                      onClick={this.fetchTopic.bind(\n                        this,\n                        currentTopicNo,\n                        dispatch\n                      )}\n                    >\n                      <i\n                        name=\"Previous Topic\"\n                        className=\"fas fa-chevron-left\"\n                      />\n                    </button>\n                    <span className=\"font-weight-bold mr-3\">Topic:</span>\n                    {currentWord.TOPIC}\n                    <span className=\"ml-3 badge badge-dark badge-pill\">\n                      {topicIDS[currentTopicNo + 1]\n                        ? topicIDS[currentTopicNo + 1] -\n                          topicIDS[currentTopicNo]\n                        : words.length - topicIDS[currentTopicNo]}\n                    </span>\n                    <button\n                      name=\"Next Topic\"\n                      className=\"btn float-right btn-success text-dark btn-lg\"\n                      onClick={this.fetchTopic.bind(\n                        this,\n                        currentTopicNo,\n                        dispatch\n                      )}\n                    >\n                      <i name=\"Next Topic\" className=\"fas fa-chevron-right\" />\n                    </button>\n                  </div>\n                </div>\n                <div className=\"card-body\">\n                  <ul className=\"list-group text-left\">\n                    <li className=\"list-group-item bg-light text-info h3 mb-3\">\n                      <span className=\"font-weight-bold text-info mr-1\">\n                        Word:\n                      </span>\n                      {currentWord.WORD}\n                    </li>\n                    <li className=\"list-group-item bg-light h5\">\n                      <span className=\"font-weight-bold mr-1\">Meaning:</span>\n                      {currentWord.MEANING}\n                    </li>\n                    <li className=\"list-group-item bg-light h5\">\n                      <span className=\"font-weight-bold mr-1\">Sentence:</span>\n                      {currentWord.SENTENCE}\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\n\nclass Buttons extends Component {\n  onClick(currentWord, totalWordsLength, dispatch, e) {\n    if (e.target.name === \"Previous Word\") {\n      if (currentWord.ID === 0) {\n        dispatch({ type: \"SHOW_WORD\", payload: totalWordsLength - 1 });\n      } else {\n        dispatch({ type: \"SHOW_WORD\", payload: currentWord.ID - 1 });\n      }\n    } else if (e.target.name === \"Next Word\") {\n      if (currentWord.ID === totalWordsLength - 1) {\n        dispatch({ type: \"SHOW_WORD\", payload: 0 });\n      } else {\n        dispatch({ type: \"SHOW_WORD\", payload: currentWord.ID + 1 });\n      }\n    }\n  }\n\n  onRandomClick(totalWordsLength, dispatch, e) {\n    if (e.target.name === \"Random Word\") {\n      dispatch({\n        type: \"SHOW_RANDOM_WORD\",\n        payload: Math.floor(Math.random() * totalWordsLength - 1) + 1\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { words, currentWord, dispatch } = value;\n          // console.log(\"Buttons il index : \", currentWord);\n          return (\n            <div className=\"btn-group mx-auto\">\n              <button\n                name=\"Previous Word\"\n                className=\"btn btn-lg btn-primary\"\n                onClick={this.onClick.bind(\n                  this,\n                  currentWord,\n                  words.length,\n                  dispatch\n                )}\n              >\n                Previous Word\n              </button>\n              <button\n                name=\"Random Word\"\n                className=\"btn btn-dark px-4\"\n                onClick={this.onRandomClick.bind(this, words.length, dispatch)}\n              >\n                <i className=\"fas fa-random mr-2\" />\n                Random Word\n              </button>\n              <button\n                name=\"Next Word\"\n                className=\"btn btn-lg btn-primary\"\n                onClick={this.onClick.bind(\n                  this,\n                  currentWord,\n                  words.length,\n                  dispatch\n                )}\n              >\n                Next Word\n              </button>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Buttons;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport Progress from \"../layout/Progress\";\nimport Card from \"../main/Card\";\nimport Buttons from \"../layout/Buttons\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { currentWord } = value;\n          return (\n            <React.Fragment>\n              <div className=\"container\">\n                <Progress />\n                <Card key={currentWord.ID} currentWord={currentWord} />\n              </div>\n              <Buttons />\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div className=\"container w-75\">\n      <p className=\"lead text-justify\">\n        GREact is a React JS based web application which neatly displays\n        important words for GRE exam along with their meanings and example\n        sentences. Similar words are grouped together under a common topic for\n        easy recollection by the learner.\n      </p>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Consumer, topicIDS } from \"../../context\";\n\nclass Topics extends Component {\n  onClick(id, dispatch) {\n    dispatch({ type: \"LOAD_TOPIC\", payload: id });\n  }\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { words, dispatch } = value;\n          return (\n            <div className=\"container\">\n              <h1 className=\"display-3 mb-5\">Topics</h1>\n              <ul\n                className=\"list-group text-left\"\n                style={{ display: \"inline-block\" }}\n              >\n                {topicIDS.map((id, idx) => (\n                  <li key={idx} className=\"list-group-item bg-light\">\n                    <Link\n                      to=\"/\"\n                      className=\"text-info\"\n                      style={{ textDecoration: \"none\" }}\n                      onClick={this.onClick.bind(this, id, dispatch)}\n                    >\n                      {words[id].TOPIC}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Topics;\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger \">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page doesn't exist.</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"../src/context\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Home from \"./components/pages/Home\";\nimport About from \"./components/pages/About\";\nimport Topics from \"./components/pages/Topics\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/topics\" component={Topics} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}